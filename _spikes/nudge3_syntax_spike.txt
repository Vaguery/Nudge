NUDGECODE:

block {
  value «float»
  value «code»
  block {
    value «image»
    value «int»
  }
}

«float»  9.128
«code» block {value «code» block {value «bool»}}
«image» file:///881727183.jpg
«int» 881
«code» block { do int_add do int_multiply }
«bool» false

# local values can include references to other local values, but can never backtrack

# the difference between the string "«foo»" and a reference to a foo footnote depends on the evaluation of the context it's in: a «string» or a «code» value

# syntax check: are all values assigned?
  If not, the missed ones have nil values! They'll disappear upon evaluation

# syntax check: are all footnote references valid strings?
  If malformed, the point's value can't be assigned

# semantic check: are there no backward-references?
  Footnotes are consumed, top-to-bottom by type, as the Interpreter matches them;
  there can't be any second references to anything
